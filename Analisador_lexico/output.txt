CONST, CONST
first, id
=, igual
100, numero
,, virgula
second, id
=, igual
00x, <ERRO_LEXICO>
1F, <ERRO_LEXICO>
;, ponto_virgula
VAR, VAR
var, id
_, <ERRO_LEXICO>
1, numero
,, virgula
$, <ERRO_LEXICO>
variable2, id
;, ponto_virgula
1, numero
{ asdfkj asld 23 */d{ {[]];/?!@#$%*(")@}, comentario
PROCEDURE, PROCEDURE
%, <ERRO_LEXICO>
newProc, id
;, ponto_virgula
VAR, VAR
local, id
;, ponto_virgula
CONST, CONST
num, id
=, igual
12, numero
., ponto
34, numero
;, ponto_virgula
BEGIN, BEGIN
var, id
_, <ERRO_LEXICO>
1, numero
:=, atribuicao
first, id
+, soma
second, id
;, ponto_virgula
CALL, CALL
$, <ERRO_LEXICO>
variable2, id
IF, IF
ODD, ODD
first, id
THEN, THEN
BEGIN, BEGIN
local, id
:=, atribuicao
(, abre_parenteses
first, id
*, mult
-, sub
num, id
), fecha_parenteses
;, ponto_virgula
WHILE, WHILE
local, id
>, maior
0, numero
DO, DO
local, id
:=, atribuicao
local, id
-, sub
1, numero
END, END
;, ponto_virgula
END, END
., ponto
1, numero
{ asdfkj asld 23 */d{ {[]];/?!@#$%*(")@ , <ERRO_LEXICO>
